apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-container
          image: 637423540591.dkr.ecr.us-east-1.amazonaws.com/spidey565/todo-flask-app:latest # Replace with your Docker Hub image
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          resources:
            requests: 
              memory: "200Mi"
              cpu: "100m"
            limits:
              memory: "400Mi"
              cpu: "200m"
          env:
            - name: MONGO_PASSWORD
              value: U3eQIAZXLQTZTBlK  # Use your MongoDB password
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10 # time to wait before the probe is initiated
            periodSeconds: 5 # Interval between probes
            failureThreshold: 3 # Number of consecutive failures before the probe is considered to be unhealthy
          
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5 # time to wait before the probe is initiated
            periodSeconds: 5 # Interval between probes
            failureThreshold: 3 # Number of consecutive failures before the probe is considered to be unhealthy
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:5.0
          ports:
            - containerPort: 27017
          resources:
            requests: 
              memory: "500Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "200m"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc
